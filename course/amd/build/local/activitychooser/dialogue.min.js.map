{"version":3,"sources":["../../../src/local/activitychooser/dialogue.js"],"names":["showModuleHelp","carousel","moduleData","help","find","selectors","regions","innerHTML","classList","add","spinnerPromise","transitionPromiseResolver","transitionPromise","Promise","resolve","contentPromise","Templates","renderForPromise","all","then","html","js","replaceNodeContents","querySelector","chooserSummary","header","focus","catch","Notification","exception","one","manageFavouriteState","modalBody","caller","partialFavourite","isFavourite","dataset","favourited","id","name","internal","Repository","unfavouriteModule","favouriteModule","registerListenerEvents","modal","mappedModules","bodyClickListener","e","target","closest","actions","optionActions","showSummary","getBody","module","chooserOption","container","moduleName","modname","get","manageFavourite","activeSectionId","elements","activetab","getAttribute","sectionChooserOptions","getSectionChooserOptions","firstChooserOption","toggleFocusableChooserOption","initChooserOptionsKeyboardNavigation","matches","closeOption","on","allModules","modules","getModuleSelector","clearSearch","searchInput","search","value","toggleSearchResultsView","getBodyPromise","body","interval","pause","keyboard","addEventListener","initTabsKeyboardNavigation","favTabNav","favouriteTabNav","recommendedTabNav","defaultTabNav","forEach","element","firstLink","parentElement","visibletabs","lastLink","lastElementChild","keyCode","arrowRight","nextLink","nextElementSibling","tabIndex","contains","arrowLeft","previousLink","previousElementSibling","home","end","space","preventDefault","click","chooserOptionsContainer","chooserOptions","querySelectorAll","Array","from","enter","currentOption","nextOption","firstOption","firstElementChild","toFocusOption","clickErrorHandler","focusChooserOption","previousOption","lastOption","currentChooserOption","previousChooserOption","isFocusable","chooserOptionLink","addChooser","chooserOptionHelp","chooserOptionFavourite","item","fallback","renderSearchResults","searchResultsContainer","searchResultsData","templateData","length","searchQuery","searchResults","chooserContainer","chooser","clearSearchButton","clearsearch","searchIcon","searchicon","searchModules","searchResultItemsContainer","searchResultItems","firstSearchResultItem","remove","setAttribute","removeAttribute","searchTerm","toLowerCase","activity","activityName","title","activityDesc","includes","push","setupKeyboardAccessibility","getModal","tab","activeSectionChooserOptions","prevActiveSectionId","relatedTarget","prevActiveSectionChooserOptions","disableFocusAllChooserOptions","allChooserOptions","displayChooser","modalPromise","sectionModules","Map","set","componentname","link","getRoot","ModalEvents","hidden","destroy"],"mappings":"wqBAwBA,OACA,OACA,OACA,OAGA,OACA,O,u3DAUMA,CAAAA,CAAc,CAAG,SAACC,CAAD,CAAWC,CAAX,CAA0B,CAC7C,GAAMC,CAAAA,CAAI,CAAGF,CAAQ,CAACG,IAAT,CAAcC,UAAUC,OAAV,CAAkBH,IAAhC,EAAsC,CAAtC,CAAb,CACAA,CAAI,CAACI,SAAL,CAAiB,EAAjB,CACAJ,CAAI,CAACK,SAAL,CAAeC,GAAf,CAAmB,QAAnB,EAH6C,GAMvCC,CAAAA,CAAc,CAAG,yBAAmBP,CAAnB,CANsB,CASzCQ,CAAyB,CAAG,IATa,CAUvCC,CAAiB,CAAG,GAAIC,CAAAA,OAAJ,CAAY,SAAAC,CAAO,CAAI,CAC7CH,CAAyB,CAAGG,CAC/B,CAFyB,CAVmB,CAevCC,CAAc,CAAGC,CAAS,CAACC,gBAAV,CAA2B,wCAA3B,CAAqEf,CAArE,CAfsB,CAkB7CW,OAAO,CAACK,GAAR,CAAY,CAACH,CAAD,CAAiBL,CAAjB,CAAiCE,CAAjC,CAAZ,EACKO,IADL,CACU,gCAAGC,CAAH,GAAGA,IAAH,CAASC,CAAT,GAASA,EAAT,OAAkBL,CAAAA,CAAS,CAACM,mBAAV,CAA8BnB,CAA9B,CAAoCiB,CAApC,CAA0CC,CAA1C,CAAlB,CADV,EAEKF,IAFL,CAEU,UAAM,CACRhB,CAAI,CAACoB,aAAL,CAAmBlB,UAAUC,OAAV,CAAkBkB,cAAlB,CAAiCC,MAApD,EAA4DC,KAA5D,GACA,MAAOvB,CAAAA,CACV,CALL,EAMKwB,KANL,CAMWC,UAAaC,SANxB,EASA5B,CAAQ,CAAC6B,GAAT,CAAa,kBAAb,CAAiC,UAAM,CACnCnB,CAAyB,EAC5B,CAFD,EAIAV,CAAQ,CAACA,QAAT,CAAkB,MAAlB,CACH,C,CAWK8B,CAAoB,4CAAG,WAAMC,CAAN,CAAiBC,CAAjB,CAAyBC,CAAzB,+FACnBC,CADmB,CACLF,CAAM,CAACG,OAAP,CAAeC,UADV,CAEnBC,CAFmB,CAEdL,CAAM,CAACG,OAAP,CAAeE,EAFD,CAGnBC,CAHmB,CAGZN,CAAM,CAACG,OAAP,CAAeG,IAHH,CAInBC,CAJmB,CAIRP,CAAM,CAACG,OAAP,CAAeI,QAJP,MAML,MAAhB,GAAAL,CANqB,kCAOfM,CAAAA,CAAU,CAACC,iBAAX,CAA6BH,CAA7B,CAAmCD,CAAnC,CAPe,QASrBJ,CAAgB,CAACM,CAAD,IAAkBR,CAAlB,CAAhB,CATqB,wCAWfS,CAAAA,CAAU,CAACE,eAAX,CAA2BJ,CAA3B,CAAiCD,CAAjC,CAXe,SAarBJ,CAAgB,CAACM,CAAD,IAAiBR,CAAjB,CAAhB,CAbqB,yCAAH,uD,CA0BpBY,CAAsB,CAAG,SAACC,CAAD,CAAQC,CAAR,CAAuBZ,CAAvB,CAA4C,CACvE,GAAMa,CAAAA,CAAiB,4CAAG,WAAMC,CAAN,2GACtB,GAAIA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB7C,UAAU8C,OAAV,CAAkBC,aAAlB,CAAgCC,WAAjD,CAAJ,CAAmE,CACzDpD,CADyD,CAC9C,cAAE4C,CAAK,CAACS,OAAN,GAAgB,CAAhB,EAAmB/B,aAAnB,CAAiClB,UAAUC,OAAV,CAAkBL,QAAnD,CAAF,CAD8C,CAGzDsD,CAHyD,CAGhDP,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB7C,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SAAjD,CAHgD,CAIzDC,CAJyD,CAI5CH,CAAM,CAACnB,OAAP,CAAeuB,OAJ6B,CAKzDzD,CALyD,CAK5C4C,CAAa,CAACc,GAAd,CAAkBF,CAAlB,CAL4C,CAM/D1D,CAAc,CAACC,CAAD,CAAWC,CAAX,CACjB,CARqB,IAUlB8C,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB7C,UAAU8C,OAAV,CAAkBC,aAAlB,CAAgCS,eAAjD,CAVkB,kBAWZ5B,CAXY,CAWHe,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB7C,UAAU8C,OAAV,CAAkBC,aAAlB,CAAgCS,eAAjD,CAXG,gBAYZ9B,CAAAA,CAAoB,CAACc,CAAK,CAACS,OAAN,GAAgB,CAAhB,CAAD,CAAqBrB,CAArB,CAA6BC,CAA7B,CAZR,QAaZ4B,CAbY,CAaMjB,CAAK,CAACS,OAAN,GAAgB,CAAhB,EAAmB/B,aAAnB,CAAiClB,UAAU0D,QAAV,CAAmBC,SAApD,EAA+DC,YAA/D,CAA4E,MAA5E,CAbN,CAcZC,CAdY,CAcYrB,CAAK,CAACS,OAAN,GAAgB,CAAhB,EACzB/B,aADyB,CACXlB,UAAUC,OAAV,CAAkB6D,wBAAlB,CAA2CL,CAA3C,CADW,CAdZ,CAgBZM,CAhBY,CAgBSF,CAAqB,CAC3C3C,aADsB,CACRlB,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SADxB,CAhBT,CAkBlBY,CAA4B,CAACD,CAAD,IAA5B,CACAE,CAAoC,CAACzB,CAAK,CAACS,OAAN,GAAgB,CAAhB,CAAD,CAAqBR,CAArB,CAAoCoB,CAApC,CAApC,CAnBkB,QAuBtB,GAAIlB,CAAC,CAACC,MAAF,CAASsB,OAAT,CAAiBlE,UAAU8C,OAAV,CAAkBqB,WAAnC,CAAJ,CAAqD,CAC3CvE,CAD2C,CAChC,cAAE4C,CAAK,CAACS,OAAN,GAAgB,CAAhB,EAAmB/B,aAAnB,CAAiClB,UAAUC,OAAV,CAAkBL,QAAnD,CAAF,CADgC,CAIjDA,CAAQ,CAACA,QAAT,CAAkB,MAAlB,EACAA,CAAQ,CAACwE,EAAT,CAAY,kBAAZ,CAAgC,UAAM,IAC5BC,CAAAA,CAAU,CAAG7B,CAAK,CAACS,OAAN,GAAgB,CAAhB,EAAmB/B,aAAnB,CAAiClB,UAAUC,OAAV,CAAkBqE,OAAnD,CADe,CAE5B1C,CAAM,CAAGyC,CAAU,CAACnD,aAAX,CAAyBlB,UAAUC,OAAV,CAAkBsE,iBAAlB,CAAoC5B,CAAC,CAACC,MAAF,CAASb,OAAT,CAAiBuB,OAArD,CAAzB,CAFmB,CAGlC1B,CAAM,CAACP,KAAP,EACH,CAJD,CAKH,CAGD,GAAIsB,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB7C,UAAU8C,OAAV,CAAkB0B,WAAnC,CAAJ,CAAqD,CAE3CC,CAF2C,CAE7BjC,CAAK,CAACS,OAAN,GAAgB,CAAhB,EAAmB/B,aAAnB,CAAiClB,UAAU8C,OAAV,CAAkB4B,MAAnD,CAF6B,CAGjDD,CAAW,CAACE,KAAZ,CAAoB,EAApB,CACAF,CAAW,CAACpD,KAAZ,GACAuD,CAAuB,CAACpC,CAAK,CAACS,OAAN,GAAgB,CAAhB,CAAD,CAAqBR,CAArB,CAAoCgC,CAAW,CAACE,KAAhD,CAC1B,CA1CqB,yCAAH,uDAAvB,CA6CAnC,CAAK,CAACqC,cAAN,GAGC/D,IAHD,CAGM,SAAAgE,CAAI,QAAIA,CAAAA,CAAI,CAAC,CAAD,CAAR,CAHV,EAMChE,IAND,CAMM,SAAAgE,CAAI,CAAI,CACV,cAAEA,CAAI,CAAC5D,aAAL,CAAmBlB,UAAUC,OAAV,CAAkBL,QAArC,CAAF,EACKA,QADL,CACc,CACNmF,QAAQ,GADF,CAENC,KAAK,GAFC,CAGNC,QAAQ,GAHF,CADd,EAOA,MAAOH,CAAAA,CACV,CAfD,EAkBChE,IAlBD,CAkBM,SAAAgE,CAAI,CAAI,CACVA,CAAI,CAACI,gBAAL,CAAsB,OAAtB,CAA+BxC,CAA/B,EACA,MAAOoC,CAAAA,CACV,CArBD,EAwBChE,IAxBD,CAwBM,SAAAgE,CAAI,CAAI,CACV,GAAML,CAAAA,CAAW,CAAGK,CAAI,CAAC5D,aAAL,CAAmBlB,UAAU8C,OAAV,CAAkB4B,MAArC,CAApB,CAEAD,CAAW,CAACS,gBAAZ,CAA6B,OAA7B,CAAsC,eAAS,UAAM,CAEjDN,CAAuB,CAACE,CAAD,CAAOrC,CAAP,CAAsBgC,CAAW,CAACE,KAAlC,CAC1B,CAHqC,CAGnC,GAHmC,CAAtC,EAIA,MAAOG,CAAAA,CACV,CAhCD,EAmCChE,IAnCD,CAmCM,SAAAgE,CAAI,CAAI,IAEJrB,CAAAA,CAAe,CAAGqB,CAAI,CAAC5D,aAAL,CAAmBlB,UAAU0D,QAAV,CAAmBC,SAAtC,EAAiDC,YAAjD,CAA8D,MAA9D,CAFd,CAGJC,CAAqB,CAAGiB,CAAI,CAAC5D,aAAL,CAAmBlB,UAAUC,OAAV,CAAkB6D,wBAAlB,CAA2CL,CAA3C,CAAnB,CAHpB,CAIJM,CAAkB,CAAGF,CAAqB,CAAC3C,aAAtB,CAAoClB,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SAApE,CAJjB,CAKVY,CAA4B,CAACD,CAAD,IAA5B,CACAoB,CAA0B,CAACL,CAAD,CAA1B,CACAb,CAAoC,CAACa,CAAD,CAAOrC,CAAP,CAAsBoB,CAAtB,CAApC,CACA,MAAOiB,CAAAA,CACV,CA5CD,EA6CCxD,KA7CD,EA+CH,C,CAQK6D,CAA0B,CAAG,SAACL,CAAD,CAAU,IAEnCM,CAAAA,CAAS,CAAGN,CAAI,CAAC5D,aAAL,CAAmBlB,UAAUC,OAAV,CAAkBoF,eAArC,CAFuB,CAGnCC,CAAiB,CAAGR,CAAI,CAAC5D,aAAL,CAAmBlB,UAAUC,OAAV,CAAkBqF,iBAArC,CAHe,CAInCC,CAAa,CAAGT,CAAI,CAAC5D,aAAL,CAAmBlB,UAAUC,OAAV,CAAkBsF,aAArC,CAJmB,CAKrB,CAACH,CAAD,CAAYE,CAAZ,CAA+BC,CAA/B,CACpB,CAAYC,OAAZ,CAAoB,SAACC,CAAD,CAAa,CAC7B,MAAOA,CAAAA,CAAO,CAACP,gBAAR,CAAyB,SAAzB,CAAoC,SAACvC,CAAD,CAAO,IAExC+C,CAAAA,CAAS,CAAG/C,CAAC,CAACC,MAAF,CAAS+C,aAAT,CAAuBzE,aAAvB,CAAqClB,UAAU0D,QAAV,CAAmBkC,WAAxD,CAF4B,CAIxCC,CAAQ,CAAGlD,CAAC,CAACC,MAAF,CAAS+C,aAAT,CAAuBG,gBAJM,CAM9C,GAAInD,CAAC,CAACoD,OAAF,GAAcC,YAAlB,CAA8B,CAC1B,GAAMC,CAAAA,CAAQ,CAAGtD,CAAC,CAACC,MAAF,CAASsD,kBAA1B,CACA,GAAiB,IAAb,GAAAD,CAAJ,CAAuB,CACnBtD,CAAC,CAACC,MAAF,CAASuD,QAAT,CAAoB,CAAC,CAArB,CACAT,CAAS,CAACS,QAAV,CAAqB,CAArB,CACAT,CAAS,CAACrE,KAAV,EACH,CAJD,IAIO,IAAI4E,CAAQ,CAAC9F,SAAT,CAAmBiG,QAAnB,CAA4B,QAA5B,CAAJ,CAA2C,CAC9CzD,CAAC,CAACC,MAAF,CAASuD,QAAT,CAAoB,CAAC,CAArB,CACAN,CAAQ,CAACM,QAAT,CAAoB,CAApB,CACAN,CAAQ,CAACxE,KAAT,EACH,CAJM,IAIA,CACHsB,CAAC,CAACC,MAAF,CAASuD,QAAT,CAAoB,CAAC,CAArB,CACAF,CAAQ,CAACE,QAAT,CAAoB,CAApB,CACAF,CAAQ,CAAC5E,KAAT,EACH,CACJ,CACD,GAAIsB,CAAC,CAACoD,OAAF,GAAcM,WAAlB,CAA6B,CACzB,GAAMC,CAAAA,CAAY,CAAG3D,CAAC,CAACC,MAAF,CAAS2D,sBAA9B,CACA,GAAqB,IAAjB,GAAAD,CAAJ,CAA2B,CACvB3D,CAAC,CAACC,MAAF,CAASuD,QAAT,CAAoB,CAAC,CAArB,CACAN,CAAQ,CAACM,QAAT,CAAoB,CAApB,CACAN,CAAQ,CAACxE,KAAT,EACH,CAJD,IAIO,IAAIiF,CAAY,CAACnG,SAAb,CAAuBiG,QAAvB,CAAgC,QAAhC,CAAJ,CAA+C,CAClDzD,CAAC,CAACC,MAAF,CAASuD,QAAT,CAAoB,CAAC,CAArB,CACAT,CAAS,CAACS,QAAV,CAAqB,CAArB,CACAT,CAAS,CAACrE,KAAV,EACH,CAJM,IAIA,CACHsB,CAAC,CAACC,MAAF,CAASuD,QAAT,CAAoB,CAAC,CAArB,CACAG,CAAY,CAACH,QAAb,CAAwB,CAAxB,CACAG,CAAY,CAACjF,KAAb,EACH,CACJ,CACD,GAAIsB,CAAC,CAACoD,OAAF,GAAcS,MAAlB,CAAwB,CACpB7D,CAAC,CAACC,MAAF,CAASuD,QAAT,CAAoB,CAAC,CAArB,CACAT,CAAS,CAACS,QAAV,CAAqB,CAArB,CACAT,CAAS,CAACrE,KAAV,EACH,CACD,GAAIsB,CAAC,CAACoD,OAAF,GAAcU,KAAlB,CAAuB,CACnB9D,CAAC,CAACC,MAAF,CAASuD,QAAT,CAAoB,CAAC,CAArB,CACAN,CAAQ,CAACM,QAAT,CAAoB,CAApB,CACAN,CAAQ,CAACxE,KAAT,EACH,CACD,GAAIsB,CAAC,CAACoD,OAAF,GAAcW,OAAlB,CAAyB,CACrB/D,CAAC,CAACgE,cAAF,GACAhE,CAAC,CAACC,MAAF,CAASgE,KAAT,EACH,CACJ,CApDM,CAqDV,CAtDD,CAuDH,C,CAUK3C,CAAoC,CAAG,SAACa,CAAD,CAAOrC,CAAP,CAAsBoE,CAAtB,CAAkD,CAC3F,GAAMC,CAAAA,CAAc,CAAGD,CAAuB,CAACE,gBAAxB,CAAyC/G,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SAAzE,CAAvB,CAEA4D,KAAK,CAACC,IAAN,CAAWH,CAAX,EAA2BtB,OAA3B,CAAmC,SAACC,CAAD,CAAa,CAC5C,MAAOA,CAAAA,CAAO,CAACP,gBAAR,CAAyB,SAAzB,CAAoC,SAACvC,CAAD,CAAO,CAG9C,GAAIA,CAAC,CAACoD,OAAF,GAAcmB,OAAd,EAAuBvE,CAAC,CAACoD,OAAF,GAAcW,OAAzC,CAAgD,CAC5C,GAAI/D,CAAC,CAACC,MAAF,CAASsB,OAAT,CAAiBlE,UAAU8C,OAAV,CAAkBC,aAAlB,CAAgCC,WAAjD,CAAJ,CAAmE,CAC/DL,CAAC,CAACgE,cAAF,GAD+D,GAEzDzD,CAAAA,CAAM,CAAGP,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB7C,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SAAjD,CAFgD,CAGzDC,CAAU,CAAGH,CAAM,CAACnB,OAAP,CAAeuB,OAH6B,CAIzDzD,CAAU,CAAG4C,CAAa,CAACc,GAAd,CAAkBF,CAAlB,CAJ4C,CAKzDzD,CAAQ,CAAG,cAAEkF,CAAI,CAAC5D,aAAL,CAAmBlB,UAAUC,OAAV,CAAkBL,QAArC,CAAF,CAL8C,CAM/DA,CAAQ,CAACA,QAAT,CAAkB,CACdmF,QAAQ,GADM,CAEdC,KAAK,GAFS,CAGdC,QAAQ,GAHM,CAAlB,EAKAtF,CAAc,CAACC,CAAD,CAAWC,CAAX,CACjB,CACJ,CAGD,GAAI8C,CAAC,CAACoD,OAAF,GAAcC,YAAlB,CAA8B,CAC1BrD,CAAC,CAACgE,cAAF,GAD0B,GAEpBQ,CAAAA,CAAa,CAAGxE,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB7C,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SAAjD,CAFI,CAGpBgE,CAAU,CAAGD,CAAa,CAACjB,kBAHP,CAIpBmB,CAAW,CAAGR,CAAuB,CAACS,iBAJlB,CAKpBC,CAAa,CAAGC,CAAiB,CAACJ,CAAD,CAAaC,CAAb,CALb,CAM1BI,CAAkB,CAACF,CAAD,CAAgBJ,CAAhB,CACrB,CAGD,GAAIxE,CAAC,CAACoD,OAAF,GAAcM,WAAlB,CAA6B,CACzB1D,CAAC,CAACgE,cAAF,GADyB,GAEnBQ,CAAAA,CAAa,CAAGxE,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB7C,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SAAjD,CAFG,CAGnBsE,CAAc,CAAGP,CAAa,CAACZ,sBAHZ,CAInBoB,CAAU,CAAGd,CAAuB,CAACf,gBAJlB,CAKnByB,CAAa,CAAGC,CAAiB,CAACE,CAAD,CAAiBC,CAAjB,CALd,CAMzBF,CAAkB,CAACF,CAAD,CAAgBJ,CAAhB,CACrB,CAED,GAAIxE,CAAC,CAACoD,OAAF,GAAcS,MAAlB,CAAwB,CACpB7D,CAAC,CAACgE,cAAF,GADoB,GAEdQ,CAAAA,CAAa,CAAGxE,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB7C,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SAAjD,CAFF,CAGdiE,CAAW,CAAGR,CAAuB,CAACS,iBAHxB,CAIpBG,CAAkB,CAACJ,CAAD,CAAcF,CAAd,CACrB,CAED,GAAIxE,CAAC,CAACoD,OAAF,GAAcU,KAAlB,CAAuB,CACnB9D,CAAC,CAACgE,cAAF,GADmB,GAEbQ,CAAAA,CAAa,CAAGxE,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB7C,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SAAjD,CAFH,CAGbuE,CAAU,CAAGd,CAAuB,CAACf,gBAHxB,CAInB2B,CAAkB,CAACE,CAAD,CAAaR,CAAb,CACrB,CACJ,CApDM,CAqDV,CAtDD,CAuDH,C,CASKM,CAAkB,CAAG,SAACG,CAAD,CAAwD,IAAjCC,CAAAA,CAAiC,wDAAT,IAAS,CAC/E,GAA8B,IAA1B,GAAAA,CAAJ,CAAoC,CAChC7D,CAA4B,CAAC6D,CAAD,IAC/B,CAED7D,CAA4B,CAAC4D,CAAD,IAA5B,CACAA,CAAoB,CAACvG,KAArB,EACH,C,CASK2C,CAA4B,CAAG,SAACb,CAAD,CAAgB2E,CAAhB,CAAgC,IAC3DC,CAAAA,CAAiB,CAAG5E,CAAa,CAACjC,aAAd,CAA4BlB,UAAU8C,OAAV,CAAkBkF,UAA9C,CADuC,CAE3DC,CAAiB,CAAG9E,CAAa,CAACjC,aAAd,CAA4BlB,UAAU8C,OAAV,CAAkBC,aAAlB,CAAgCC,WAA5D,CAFuC,CAG3DkF,CAAsB,CAAG/E,CAAa,CAACjC,aAAd,CAA4BlB,UAAU8C,OAAV,CAAkBC,aAAlB,CAAgCS,eAA5D,CAHkC,CAKjE,GAAIsE,CAAJ,CAAiB,CAEb3E,CAAa,CAACgD,QAAd,CAAyB,CAAzB,CACA4B,CAAiB,CAAC5B,QAAlB,CAA6B,CAA7B,CACA8B,CAAiB,CAAC9B,QAAlB,CAA6B,CAA7B,CACA+B,CAAsB,CAAC/B,QAAvB,CAAkC,CACrC,CAND,IAMO,CAEHhD,CAAa,CAACgD,QAAd,CAAyB,CAAC,CAA1B,CACA4B,CAAiB,CAAC5B,QAAlB,CAA6B,CAAC,CAA9B,CACA8B,CAAiB,CAAC9B,QAAlB,CAA6B,CAAC,CAA9B,CACA+B,CAAsB,CAAC/B,QAAvB,CAAkC,CAAC,CACtC,CACJ,C,CAUKqB,CAAiB,CAAG,SAACW,CAAD,CAAOC,CAAP,CAAoB,CAC1C,GAAa,IAAT,GAAAD,CAAJ,CAAmB,CACf,MAAOA,CAAAA,CACV,CAFD,IAEO,CACH,MAAOC,CAAAA,CACV,CACJ,C,CASKC,CAAmB,4CAAG,WAAMC,CAAN,CAA8BC,CAA9B,+FAClBC,CADkB,CACH,CACjB,oBAAuBD,CAAiB,CAACE,MADxB,CAEjB,cAAiBF,CAFA,CADG,gBAMC5H,CAAAA,CAAS,CAACC,gBAAV,CAA2B,kDAA3B,CAA+E4H,CAA/E,CAND,iBAMjBzH,CANiB,GAMjBA,IANiB,CAMXC,CANW,GAMXA,EANW,gBAOlBL,CAAAA,CAAS,CAACM,mBAAV,CAA8BqH,CAA9B,CAAsDvH,CAAtD,CAA4DC,CAA5D,CAPkB,yCAAH,uD,CAkBnB4D,CAAuB,4CAAG,WAAMjD,CAAN,CAAiBc,CAAjB,CAAgCiG,CAAhC,qGACtBJ,CADsB,CACG3G,CAAS,CAACT,aAAV,CAAwBlB,UAAUC,OAAV,CAAkB0I,aAA1C,CADH,CAEtBC,CAFsB,CAEHjH,CAAS,CAACT,aAAV,CAAwBlB,UAAUC,OAAV,CAAkB4I,OAA1C,CAFG,CAGtBC,CAHsB,CAGFnH,CAAS,CAACT,aAAV,CAAwBlB,UAAU0D,QAAV,CAAmBqF,WAA3C,CAHE,CAItBC,CAJsB,CAITrH,CAAS,CAACT,aAAV,CAAwBlB,UAAU0D,QAAV,CAAmBuF,UAA3C,CAJS,MAMH,CAArB,CAAAP,CAAW,CAACD,MANY,mBAOlBF,CAPkB,CAOEW,CAAa,CAACzG,CAAD,CAAgBiG,CAAhB,CAPf,gBAQlBL,CAAAA,CAAmB,CAACC,CAAD,CAAyBC,CAAzB,CARD,QASlBY,CATkB,CASWb,CAAsB,CAACpH,aAAvB,CAAqClB,UAAUC,OAAV,CAAkBmJ,iBAAvD,CATX,CAUlBC,CAVkB,CAUMF,CAA0B,CAACjI,aAA3B,CAAyClB,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SAAzE,CAVN,CAWxB,GAAIiG,CAAJ,CAA2B,CAEvBrF,CAA4B,CAACqF,CAAD,IAA5B,CAEApF,CAAoC,CAACtC,CAAD,CAAYc,CAAZ,CAA2B0G,CAA3B,CACvC,CAEDH,CAAU,CAAC7I,SAAX,CAAqBC,GAArB,CAAyB,QAAzB,EACA0I,CAAiB,CAAC3I,SAAlB,CAA4BmJ,MAA5B,CAAmC,QAAnC,EAEAV,CAAgB,CAACW,YAAjB,CAA8B,QAA9B,CAAwC,QAAxC,EAEAjB,CAAsB,CAACkB,eAAvB,CAAuC,QAAvC,EAvBwB,wBA0BxBV,CAAiB,CAAC3I,SAAlB,CAA4BC,GAA5B,CAAgC,QAAhC,EACA4I,CAAU,CAAC7I,SAAX,CAAqBmJ,MAArB,CAA4B,QAA5B,EAEAhB,CAAsB,CAACiB,YAAvB,CAAoC,QAApC,CAA8C,QAA9C,EAEAX,CAAgB,CAACY,eAAjB,CAAiC,QAAjC,EA/BwB,yCAAH,uD,CA2CvBN,CAAa,CAAG,SAAC5E,CAAD,CAAUmF,CAAV,CAAyB,CAC3C,GAAmB,EAAf,GAAAA,CAAJ,CAAuB,CACnB,MAAOnF,CAAAA,CACV,CACDmF,CAAU,CAAGA,CAAU,CAACC,WAAX,EAAb,CACA,GAAMf,CAAAA,CAAa,CAAG,EAAtB,CACArE,CAAO,CAACkB,OAAR,CAAgB,SAACmE,CAAD,CAAc,IACpBC,CAAAA,CAAY,CAAGD,CAAQ,CAACE,KAAT,CAAeH,WAAf,EADK,CAEpBI,CAAY,CAAGH,CAAQ,CAAC7J,IAAT,CAAc4J,WAAd,EAFK,CAG1B,GAAIE,CAAY,CAACG,QAAb,CAAsBN,CAAtB,GAAqCK,CAAY,CAACC,QAAb,CAAsBN,CAAtB,CAAzC,CAA4E,CACxEd,CAAa,CAACqB,IAAd,CAAmBL,CAAnB,CACH,CACJ,CAND,EAQA,MAAOhB,CAAAA,CACV,C,CASKsB,CAA0B,CAAG,SAACzH,CAAD,CAAQC,CAAR,CAA0B,CACzDD,CAAK,CAAC0H,QAAN,GAAiB,CAAjB,EAAoB/D,QAApB,CAA+B,CAAC,CAAhC,CAEA3D,CAAK,CAACqC,cAAN,GAAuB/D,IAAvB,CAA4B,SAAAgE,CAAI,CAAI,CAChC,cAAE9E,UAAU0D,QAAV,CAAmByG,GAArB,EAA0B/F,EAA1B,CAA6B,cAA7B,CAA6C,SAACzB,CAAD,CAAO,IAC1Cc,CAAAA,CAAe,CAAGd,CAAC,CAACC,MAAF,CAASgB,YAAT,CAAsB,MAAtB,CADwB,CAE1CwG,CAA2B,CAAGtF,CAAI,CAAC,CAAD,CAAJ,CAC/B5D,aAD+B,CACjBlB,UAAUC,OAAV,CAAkB6D,wBAAlB,CAA2CL,CAA3C,CADiB,CAFY,CAI1CM,CAAkB,CAAGqG,CAA2B,CACjDlJ,aADsB,CACRlB,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SADxB,CAJqB,CAM1CiH,CAAmB,CAAG1H,CAAC,CAAC2H,aAAF,CAAgB1G,YAAhB,CAA6B,MAA7B,CANoB,CAO1C2G,CAA+B,CAAGzF,CAAI,CAAC,CAAD,CAAJ,CACnC5D,aADmC,CACrBlB,UAAUC,OAAV,CAAkB6D,wBAAlB,CAA2CuG,CAA3C,CADqB,CAPQ,CAWhDG,CAA6B,CAACD,CAAD,CAA7B,CAEAvG,CAA4B,CAACD,CAAD,IAA5B,CACAE,CAAoC,CAACa,CAAI,CAAC,CAAD,CAAL,CAAUrC,CAAV,CAAyB2H,CAAzB,CACvC,CAfD,CAiBH,CAlBD,EAkBG9I,KAlBH,CAkBSC,UAAaC,SAlBtB,CAmBH,C,CAQKgJ,CAA6B,CAAG,SAAC3G,CAAD,CAA2B,CAC7D,GAAM4G,CAAAA,CAAiB,CAAG5G,CAAqB,CAACkD,gBAAtB,CAAuC/G,UAAUC,OAAV,CAAkBkD,aAAlB,CAAgCC,SAAvE,CAA1B,CACAqH,CAAiB,CAACjF,OAAlB,CAA0B,SAACrC,CAAD,CAAmB,CACzCa,CAA4B,CAACb,CAAD,IAC/B,CAFD,CAGH,C,kBAU6B,QAAjBuH,CAAAA,cAAiB,CAACC,CAAD,CAAeC,CAAf,CAA+B/I,CAA/B,CAAoD,CAE9E,GAAMY,CAAAA,CAAa,CAAG,GAAIoI,CAAAA,GAA1B,CACAD,CAAc,CAACpF,OAAf,CAAuB,SAACtC,CAAD,CAAY,CAC/BT,CAAa,CAACqI,GAAd,CAAkB5H,CAAM,CAAC6H,aAAP,CAAuB,GAAvB,CAA6B7H,CAAM,CAAC8H,IAAtD,CAA4D9H,CAA5D,CACH,CAFD,EAKAyH,CAAY,CAAC7J,IAAb,CAAkB,SAAA0B,CAAK,CAAI,CACvBD,CAAsB,CAACC,CAAD,CAAQC,CAAR,CAAuBZ,CAAvB,CAAtB,CAGAoI,CAA0B,CAACzH,CAAD,CAAQC,CAAR,CAA1B,CAGAD,CAAK,CAACyI,OAAN,GAAgB7G,EAAhB,CAAmB8G,CAAW,CAACC,MAA/B,CAAuC,UAAM,CACzC3I,CAAK,CAAC4I,OAAN,EACH,CAFD,EAIA,MAAO5I,CAAAA,CACV,CAZD,EAaClB,KAbD,EAcH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A type of dialogue used as for choosing options.\n *\n * @module     core_course/local/chooser/dialogue\n * @package    core\n * @copyright  2019 Mihail Geshoski <mihail@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as ModalEvents from 'core/modal_events';\nimport selectors from 'core_course/local/activitychooser/selectors';\nimport * as Templates from 'core/templates';\nimport {end, arrowLeft, arrowRight, home, enter, space} from 'core/key_codes';\nimport {addIconToContainer} from 'core/loadingicon';\nimport * as Repository from 'core_course/local/activitychooser/repository';\nimport Notification from 'core/notification';\nimport {debounce} from 'core/utils';\n\n/**\n * Given an event from the main module 'page' navigate to it's help section via a carousel.\n *\n * @method showModuleHelp\n * @param {jQuery} carousel Our initialized carousel to manipulate\n * @param {Object} moduleData Data of the module to carousel to\n */\nconst showModuleHelp = (carousel, moduleData) => {\n    const help = carousel.find(selectors.regions.help)[0];\n    help.innerHTML = '';\n    help.classList.add('m-auto');\n\n    // Add a spinner.\n    const spinnerPromise = addIconToContainer(help);\n\n    // Used later...\n    let transitionPromiseResolver = null;\n    const transitionPromise = new Promise(resolve => {\n        transitionPromiseResolver = resolve;\n    });\n\n    // Build up the html & js ready to place into the help section.\n    const contentPromise = Templates.renderForPromise('core_course/local/activitychooser/help', moduleData);\n\n    // Wait for the content to be ready, and for the transition to be complet.\n    Promise.all([contentPromise, spinnerPromise, transitionPromise])\n        .then(([{html, js}]) => Templates.replaceNodeContents(help, html, js))\n        .then(() => {\n            help.querySelector(selectors.regions.chooserSummary.header).focus();\n            return help;\n        })\n        .catch(Notification.exception);\n\n    // Move to the next slide, and resolve the transition promise when it's done.\n    carousel.one('slid.bs.carousel', () => {\n        transitionPromiseResolver();\n    });\n    // Trigger the transition between 'pages'.\n    carousel.carousel('next');\n};\n\n/**\n * Given a user wants to change the favourite state of a module we either add or remove the status.\n * We also propergate this change across our map of modals.\n *\n * @method manageFavouriteState\n * @param {HTMLElement} modalBody The DOM node of the modal to manipulate\n * @param {HTMLElement} caller\n * @param {Function} partialFavourite Partially applied function we need to manage favourite status\n */\nconst manageFavouriteState = async(modalBody, caller, partialFavourite) => {\n    const isFavourite = caller.dataset.favourited;\n    const id = caller.dataset.id;\n    const name = caller.dataset.name;\n    const internal = caller.dataset.internal;\n    // Switch on fave or not.\n    if (isFavourite === 'true') {\n        await Repository.unfavouriteModule(name, id);\n\n        partialFavourite(internal, false, modalBody);\n    } else {\n        await Repository.favouriteModule(name, id);\n\n        partialFavourite(internal, true, modalBody);\n    }\n\n};\n\n/**\n * Register chooser related event listeners.\n *\n * @method registerListenerEvents\n * @param {Promise} modal Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {Function} partialFavourite Partially applied function we need to manage favourite status\n */\nconst registerListenerEvents = (modal, mappedModules, partialFavourite) => {\n    const bodyClickListener = async(e) => {\n        if (e.target.closest(selectors.actions.optionActions.showSummary)) {\n            const carousel = $(modal.getBody()[0].querySelector(selectors.regions.carousel));\n\n            const module = e.target.closest(selectors.regions.chooserOption.container);\n            const moduleName = module.dataset.modname;\n            const moduleData = mappedModules.get(moduleName);\n            showModuleHelp(carousel, moduleData);\n        }\n\n        if (e.target.closest(selectors.actions.optionActions.manageFavourite)) {\n            const caller = e.target.closest(selectors.actions.optionActions.manageFavourite);\n            await manageFavouriteState(modal.getBody()[0], caller, partialFavourite);\n            const activeSectionId = modal.getBody()[0].querySelector(selectors.elements.activetab).getAttribute(\"href\");\n            const sectionChooserOptions = modal.getBody()[0]\n                .querySelector(selectors.regions.getSectionChooserOptions(activeSectionId));\n            const firstChooserOption = sectionChooserOptions\n                .querySelector(selectors.regions.chooserOption.container);\n            toggleFocusableChooserOption(firstChooserOption, true);\n            initChooserOptionsKeyboardNavigation(modal.getBody()[0], mappedModules, sectionChooserOptions);\n        }\n\n        // From the help screen go back to the module overview.\n        if (e.target.matches(selectors.actions.closeOption)) {\n            const carousel = $(modal.getBody()[0].querySelector(selectors.regions.carousel));\n\n            // Trigger the transition between 'pages'.\n            carousel.carousel('prev');\n            carousel.on('slid.bs.carousel', () => {\n                const allModules = modal.getBody()[0].querySelector(selectors.regions.modules);\n                const caller = allModules.querySelector(selectors.regions.getModuleSelector(e.target.dataset.modname));\n                caller.focus();\n            });\n        }\n\n        // The \"clear search\" button is triggered.\n        if (e.target.closest(selectors.actions.clearSearch)) {\n            // Clear the entered search query in the search bar and hide the search results container.\n            const searchInput = modal.getBody()[0].querySelector(selectors.actions.search);\n            searchInput.value = \"\";\n            searchInput.focus();\n            toggleSearchResultsView(modal.getBody()[0], mappedModules, searchInput.value);\n        }\n    };\n\n    modal.getBodyPromise()\n\n    // The return value of getBodyPromise is a jquery object containing the body NodeElement.\n    .then(body => body[0])\n\n    // Set up the carousel.\n    .then(body => {\n        $(body.querySelector(selectors.regions.carousel))\n            .carousel({\n                interval: false,\n                pause: true,\n                keyboard: false\n            });\n\n        return body;\n    })\n\n    // Add the listener for clicks on the body.\n    .then(body => {\n        body.addEventListener('click', bodyClickListener);\n        return body;\n    })\n\n    // Add a listener for an input change in the activity chooser's search bar.\n    .then(body => {\n        const searchInput = body.querySelector(selectors.actions.search);\n        // The search input is triggered.\n        searchInput.addEventListener('input', debounce(() => {\n            // Display the search results.\n            toggleSearchResultsView(body, mappedModules, searchInput.value);\n        }, 300));\n        return body;\n    })\n\n    // Register event listeners related to the keyboard navigation controls.\n    .then(body => {\n        // Get the active chooser options section.\n        const activeSectionId = body.querySelector(selectors.elements.activetab).getAttribute(\"href\");\n        const sectionChooserOptions = body.querySelector(selectors.regions.getSectionChooserOptions(activeSectionId));\n        const firstChooserOption = sectionChooserOptions.querySelector(selectors.regions.chooserOption.container);\n        toggleFocusableChooserOption(firstChooserOption, true);\n        initTabsKeyboardNavigation(body);\n        initChooserOptionsKeyboardNavigation(body, mappedModules, sectionChooserOptions);\n        return body;\n    })\n    .catch();\n\n};\n\n/**\n * Initialise the keyboard navigation controls for the tab list items.\n *\n * @method initTabsKeyboardNavigation\n * @param {HTMLElement} body Our modal that we are working with\n */\nconst initTabsKeyboardNavigation = (body) => {\n    // Set up the tab handlers.\n    const favTabNav = body.querySelector(selectors.regions.favouriteTabNav);\n    const recommendedTabNav = body.querySelector(selectors.regions.recommendedTabNav);\n    const defaultTabNav = body.querySelector(selectors.regions.defaultTabNav);\n    const tabNavArray = [favTabNav, recommendedTabNav, defaultTabNav];\n    tabNavArray.forEach((element) => {\n        return element.addEventListener('keydown', (e) => {\n            // The first visible navigation tab link.\n            const firstLink = e.target.parentElement.querySelector(selectors.elements.visibletabs);\n            // The last navigation tab link. It would always be the default activities tab link.\n            const lastLink = e.target.parentElement.lastElementChild;\n\n            if (e.keyCode === arrowRight) {\n                const nextLink = e.target.nextElementSibling;\n                if (nextLink === null) {\n                    e.target.tabIndex = -1;\n                    firstLink.tabIndex = 0;\n                    firstLink.focus();\n                } else if (nextLink.classList.contains('d-none')) {\n                    e.target.tabIndex = -1;\n                    lastLink.tabIndex = 0;\n                    lastLink.focus();\n                } else {\n                    e.target.tabIndex = -1;\n                    nextLink.tabIndex = 0;\n                    nextLink.focus();\n                }\n            }\n            if (e.keyCode === arrowLeft) {\n                const previousLink = e.target.previousElementSibling;\n                if (previousLink === null) {\n                    e.target.tabIndex = -1;\n                    lastLink.tabIndex = 0;\n                    lastLink.focus();\n                } else if (previousLink.classList.contains('d-none')) {\n                    e.target.tabIndex = -1;\n                    firstLink.tabIndex = 0;\n                    firstLink.focus();\n                } else {\n                    e.target.tabIndex = -1;\n                    previousLink.tabIndex = 0;\n                    previousLink.focus();\n                }\n            }\n            if (e.keyCode === home) {\n                e.target.tabIndex = -1;\n                firstLink.tabIndex = 0;\n                firstLink.focus();\n            }\n            if (e.keyCode === end) {\n                e.target.tabIndex = -1;\n                lastLink.tabIndex = 0;\n                lastLink.focus();\n            }\n            if (e.keyCode === space) {\n                e.preventDefault();\n                e.target.click();\n            }\n        });\n    });\n};\n\n/**\n * Initialise the keyboard navigation controls for the chooser options.\n *\n * @method initChooserOptionsKeyboardNavigation\n * @param {HTMLElement} body Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {HTMLElement} chooserOptionsContainer The section that contains the chooser items\n */\nconst initChooserOptionsKeyboardNavigation = (body, mappedModules, chooserOptionsContainer) => {\n    const chooserOptions = chooserOptionsContainer.querySelectorAll(selectors.regions.chooserOption.container);\n\n    Array.from(chooserOptions).forEach((element) => {\n        return element.addEventListener('keydown', (e) => {\n\n            // Check for enter/ space triggers for showing the help.\n            if (e.keyCode === enter || e.keyCode === space) {\n                if (e.target.matches(selectors.actions.optionActions.showSummary)) {\n                    e.preventDefault();\n                    const module = e.target.closest(selectors.regions.chooserOption.container);\n                    const moduleName = module.dataset.modname;\n                    const moduleData = mappedModules.get(moduleName);\n                    const carousel = $(body.querySelector(selectors.regions.carousel));\n                    carousel.carousel({\n                        interval: false,\n                        pause: true,\n                        keyboard: false\n                    });\n                    showModuleHelp(carousel, moduleData);\n                }\n            }\n\n            // Next.\n            if (e.keyCode === arrowRight) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const nextOption = currentOption.nextElementSibling;\n                const firstOption = chooserOptionsContainer.firstElementChild;\n                const toFocusOption = clickErrorHandler(nextOption, firstOption);\n                focusChooserOption(toFocusOption, currentOption);\n            }\n\n            // Previous.\n            if (e.keyCode === arrowLeft) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const previousOption = currentOption.previousElementSibling;\n                const lastOption = chooserOptionsContainer.lastElementChild;\n                const toFocusOption = clickErrorHandler(previousOption, lastOption);\n                focusChooserOption(toFocusOption, currentOption);\n            }\n\n            if (e.keyCode === home) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const firstOption = chooserOptionsContainer.firstElementChild;\n                focusChooserOption(firstOption, currentOption);\n            }\n\n            if (e.keyCode === end) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const lastOption = chooserOptionsContainer.lastElementChild;\n                focusChooserOption(lastOption, currentOption);\n            }\n        });\n    });\n};\n\n/**\n * Focus on a chooser option element and remove the previous chooser element from the focus order\n *\n * @method focusChooserOption\n * @param {HTMLElement} currentChooserOption The current chooser option element that we want to focus\n * @param {HTMLElement|null} previousChooserOption The previous focused option element\n */\nconst focusChooserOption = (currentChooserOption, previousChooserOption = null) => {\n    if (previousChooserOption !== null) {\n        toggleFocusableChooserOption(previousChooserOption, false);\n    }\n\n    toggleFocusableChooserOption(currentChooserOption, true);\n    currentChooserOption.focus();\n};\n\n/**\n * Add or remove a chooser option from the focus order.\n *\n * @method toggleFocusableChooserOption\n * @param {HTMLElement} chooserOption The chooser option element which should be added or removed from the focus order\n * @param {Boolean} isFocusable Whether the chooser element is focusable or not\n */\nconst toggleFocusableChooserOption = (chooserOption, isFocusable) => {\n    const chooserOptionLink = chooserOption.querySelector(selectors.actions.addChooser);\n    const chooserOptionHelp = chooserOption.querySelector(selectors.actions.optionActions.showSummary);\n    const chooserOptionFavourite = chooserOption.querySelector(selectors.actions.optionActions.manageFavourite);\n\n    if (isFocusable) {\n        // Set tabindex to 0 to add current chooser option element to the focus order.\n        chooserOption.tabIndex = 0;\n        chooserOptionLink.tabIndex = 0;\n        chooserOptionHelp.tabIndex = 0;\n        chooserOptionFavourite.tabIndex = 0;\n    } else {\n        // Set tabindex to -1 to remove the previous chooser option element from the focus order.\n        chooserOption.tabIndex = -1;\n        chooserOptionLink.tabIndex = -1;\n        chooserOptionHelp.tabIndex = -1;\n        chooserOptionFavourite.tabIndex = -1;\n    }\n};\n\n/**\n * Small error handling function to make sure the navigated to object exists\n *\n * @method clickErrorHandler\n * @param {HTMLElement} item What we want to check exists\n * @param {HTMLElement} fallback If we dont match anything fallback the focus\n * @return {HTMLElement}\n */\nconst clickErrorHandler = (item, fallback) => {\n    if (item !== null) {\n        return item;\n    } else {\n        return fallback;\n    }\n};\n\n/**\n * Render the search results in a defined container\n *\n * @method renderSearchResults\n * @param {HTMLElement} searchResultsContainer The container where the data should be rendered\n * @param {Object} searchResultsData Data containing the module items that satisfy the search criteria\n */\nconst renderSearchResults = async(searchResultsContainer, searchResultsData) => {\n    const templateData = {\n        'searchresultsnumber': searchResultsData.length,\n        'searchresults': searchResultsData\n    };\n    // Build up the html & js ready to place into the help section.\n    const {html, js} = await Templates.renderForPromise('core_course/local/activitychooser/search_results', templateData);\n    await Templates.replaceNodeContents(searchResultsContainer, html, js);\n};\n\n/**\n * Toggle (display/hide) the search results depending on the value of the search query\n *\n * @method toggleSearchResultsView\n * @param {HTMLElement} modalBody The body of the created modal for the section\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {String} searchQuery The search query\n */\nconst toggleSearchResultsView = async(modalBody, mappedModules, searchQuery) => {\n    const searchResultsContainer = modalBody.querySelector(selectors.regions.searchResults);\n    const chooserContainer = modalBody.querySelector(selectors.regions.chooser);\n    const clearSearchButton = modalBody.querySelector(selectors.elements.clearsearch);\n    const searchIcon = modalBody.querySelector(selectors.elements.searchicon);\n\n    if (searchQuery.length > 0) { // Search query is present.\n        const searchResultsData = searchModules(mappedModules, searchQuery);\n        await renderSearchResults(searchResultsContainer, searchResultsData);\n        const searchResultItemsContainer = searchResultsContainer.querySelector(selectors.regions.searchResultItems);\n        const firstSearchResultItem = searchResultItemsContainer.querySelector(selectors.regions.chooserOption.container);\n        if (firstSearchResultItem) {\n            // Set the first result item to be focusable.\n            toggleFocusableChooserOption(firstSearchResultItem, true);\n            // Register keyboard events on the created search result items.\n            initChooserOptionsKeyboardNavigation(modalBody, mappedModules, searchResultItemsContainer);\n        }\n        // Display the \"clear\" search button in the activity chooser search bar.\n        searchIcon.classList.add('d-none');\n        clearSearchButton.classList.remove('d-none');\n        // Hide the default chooser options container.\n        chooserContainer.setAttribute('hidden', 'hidden');\n        // Display the search results container.\n        searchResultsContainer.removeAttribute('hidden');\n    } else { // Search query is not present.\n        // Hide the \"clear\" search button in the activity chooser search bar.\n        clearSearchButton.classList.add('d-none');\n        searchIcon.classList.remove('d-none');\n        // Hide the search results container.\n        searchResultsContainer.setAttribute('hidden', 'hidden');\n        // Display the default chooser options container.\n        chooserContainer.removeAttribute('hidden');\n    }\n};\n\n/**\n * Return the list of modules which have a name or description that matches the given search term.\n *\n * @method searchModules\n * @param {Array} modules List of available modules\n * @param {String} searchTerm The search term to match\n * @return {Array}\n */\nconst searchModules = (modules, searchTerm) => {\n    if (searchTerm === '') {\n        return modules;\n    }\n    searchTerm = searchTerm.toLowerCase();\n    const searchResults = [];\n    modules.forEach((activity) => {\n        const activityName = activity.title.toLowerCase();\n        const activityDesc = activity.help.toLowerCase();\n        if (activityName.includes(searchTerm) || activityDesc.includes(searchTerm)) {\n            searchResults.push(activity);\n        }\n    });\n\n    return searchResults;\n};\n\n/**\n * Set up our tabindex information across the chooser.\n *\n * @method setupKeyboardAccessibility\n * @param {Promise} modal Our created modal for the section\n * @param {Map} mappedModules A map of all of the built module information\n */\nconst setupKeyboardAccessibility = (modal, mappedModules) => {\n    modal.getModal()[0].tabIndex = -1;\n\n    modal.getBodyPromise().then(body => {\n        $(selectors.elements.tab).on('shown.bs.tab', (e) => {\n            const activeSectionId = e.target.getAttribute(\"href\");\n            const activeSectionChooserOptions = body[0]\n                .querySelector(selectors.regions.getSectionChooserOptions(activeSectionId));\n            const firstChooserOption = activeSectionChooserOptions\n                .querySelector(selectors.regions.chooserOption.container);\n            const prevActiveSectionId = e.relatedTarget.getAttribute(\"href\");\n            const prevActiveSectionChooserOptions = body[0]\n                .querySelector(selectors.regions.getSectionChooserOptions(prevActiveSectionId));\n\n            // Disable the focus of every chooser option in the previous active section.\n            disableFocusAllChooserOptions(prevActiveSectionChooserOptions);\n            // Enable the focus of the first chooser option in the current active section.\n            toggleFocusableChooserOption(firstChooserOption, true);\n            initChooserOptionsKeyboardNavigation(body[0], mappedModules, activeSectionChooserOptions);\n        });\n        return;\n    }).catch(Notification.exception);\n};\n\n/**\n * Disable the focus of all chooser options in a specific container (section).\n *\n * @method disableFocusAllChooserOptions\n * @param {HTMLElement} sectionChooserOptions The section that contains the chooser items\n */\nconst disableFocusAllChooserOptions = (sectionChooserOptions) => {\n    const allChooserOptions = sectionChooserOptions.querySelectorAll(selectors.regions.chooserOption.container);\n    allChooserOptions.forEach((chooserOption) => {\n        toggleFocusableChooserOption(chooserOption, false);\n    });\n};\n\n/**\n * Display the module chooser.\n *\n * @method displayChooser\n * @param {Promise} modalPromise Our created modal for the section\n * @param {Array} sectionModules An array of all of the built module information\n * @param {Function} partialFavourite Partially applied function we need to manage favourite status\n */\nexport const displayChooser = (modalPromise, sectionModules, partialFavourite) => {\n    // Make a map so we can quickly fetch a specific module's object for either rendering or searching.\n    const mappedModules = new Map();\n    sectionModules.forEach((module) => {\n        mappedModules.set(module.componentname + '_' + module.link, module);\n    });\n\n    // Register event listeners.\n    modalPromise.then(modal => {\n        registerListenerEvents(modal, mappedModules, partialFavourite);\n\n        // We want to focus on the first chooser option element as soon as the modal is opened.\n        setupKeyboardAccessibility(modal, mappedModules);\n\n        // We want to focus on the action select when the dialog is closed.\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            modal.destroy();\n        });\n\n        return modal;\n    })\n    .catch();\n};\n"],"file":"dialogue.min.js"}